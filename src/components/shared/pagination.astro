---
import ArrowLeftDouble from "@/assets/svgs/arrow-left-double.astro";
import ArrowRightDouble from "@/assets/svgs/arrow-right-double.astro";
import ArrowLeft01 from "@/assets/svgs/arrow-left-01.astro";
import ArrowRight01 from "@/assets/svgs/arrow-right-01.astro";

type Props = {
  length: number;
  currentUrl: string;
  currentPage: number;
  baseUrl: string;
  prevUrl: string | undefined;
  nextUrl: string | undefined;
  lastUrl: string;
};

const { length, currentUrl, currentPage, baseUrl, prevUrl, nextUrl, lastUrl } =
  Astro.props;

// Define the maximum number of visible buttons
const maxVisibleButtons = 4;

// Calculate the range of visible page numbers
const startPage = Math.max(1, currentPage - Math.floor(maxVisibleButtons / 2));
const endPage = Math.min(length, startPage + maxVisibleButtons - 1);

// Adjust the startPage if we're at the end of the pagination
const adjustedStartPage = Math.max(1, endPage - maxVisibleButtons + 1);

// Generate the pagination list based on the range
const paginationList = Array.from(
  { length: endPage - adjustedStartPage + 1 },
  (_, i) => adjustedStartPage + i
);
---

<section
  class:list={[
    "flex items-center mx-auto mt-8",
    !prevUrl && !nextUrl ? "hidden" : "",
  ]}
>
  <nav class="join">
    {
      `${baseUrl}/1` == `${currentUrl}` ? (
        <span class="join-item btn btn-sm btn-disabled" aria-label="First page">
          <ArrowLeftDouble />
        </span>
      ) : (
        <a
          href={`${baseUrl}/1`}
          class="join-item btn btn-sm"
          aria-label="First page"
        >
          <ArrowLeftDouble />
        </a>
      )
    }

    {
      prevUrl ? (
        <a href={prevUrl} class="join-item btn btn-sm">
          <ArrowLeft01 /> <span class="hidden lg:block">Previous</span>
        </a>
      ) : (
        <span class="join-item btn btn-sm btn-disabled">
          <ArrowLeft01 /> <span class="hidden lg:block">Previous</span>
        </span>
      )
    }

    {
      paginationList.map((num) => (
        <a
          href={`${baseUrl}${num == 1 ? "" : "/" + num}`}
          class={`join-item btn btn-sm ${currentPage == num ? "btn-active pointer-events-none" : ""}`}
        >
          {num}
        </a>
      ))
    }

    {
      !nextUrl ? (
        <span class="join-item btn btn-sm btn-disabled">
          <span class="hidden lg:block">Next</span> <ArrowRight01 />
        </span>
      ) : (
        <a href={nextUrl} class="join-item btn btn-sm">
          <span class="hidden lg:block">Next</span> <ArrowRight01 />
        </a>
      )
    }

    {
      lastUrl == currentUrl ? (
        <span class="join-item btn btn-sm btn-disabled" aria-label="Last page">
          <ArrowRightDouble />
        </span>
      ) : (
        <a href={lastUrl} class="join-item btn btn-sm" aria-label="Last page">
          <ArrowRightDouble />
        </a>
      )
    }
  </nav>
</section>
